{"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/markdownview\/markdownview\/onchange(of:initial:_:)-nxcn"]}],"sections":[],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onChange","kind":"identifier"},{"text":"<","kind":"text"},{"text":"E","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"of","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"E","preciseIdentifier":"s:7SwiftUI4ViewP08MarkdownC0E8onChange2of7initial_Qrqd___SbyyctSQRd__lFQO1Eqd__mfp"},{"text":", ","kind":"text"},{"text":"initial","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", () -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}],"externalID":"s:7SwiftUI4ViewP08MarkdownC0E8onChange2of7initial_Qrqd___SbyyctSQRd__lF::SYNTHESIZED::s:12MarkdownViewAAV","modules":[{"name":"MarkdownView","relatedModules":["SwiftUICore"]}],"extendedModule":"SwiftUICore","role":"symbol","title":"onChange(of:initial:_:)","roleHeading":"Instance Method","symbolKind":"method","platforms":[{"introducedAt":"14.0","deprecated":false,"name":"iOS","deprecatedAt":"17.0","unavailable":false,"beta":false},{"introducedAt":"11.0","unavailable":false,"beta":false,"deprecated":false,"deprecatedAt":"14.0","name":"macOS"},{"deprecatedAt":"17.0","introducedAt":"14.0","name":"tvOS","deprecated":false,"beta":false,"unavailable":false},{"unavailable":false,"introducedAt":"7.0","name":"watchOS","deprecated":false,"beta":false,"deprecatedAt":"10.0"}]},"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/markdownview.MarkdownView\/documentation\/MarkdownView","doc:\/\/markdownview.MarkdownView\/documentation\/MarkdownView\/MarkdownView","doc:\/\/markdownview.MarkdownView\/documentation\/MarkdownView\/MarkdownView\/View-Implementations"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@","kind":"attribute"},{"kind":"attribute","text":"MainActor","preciseIdentifier":"s:ScM"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"onChange"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"E"},{"text":">(","kind":"text"},{"text":"of","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"E","preciseIdentifier":"s:7SwiftUI4ViewP08MarkdownC0E8onChange2of7initial_Qrqd___SbyyctSQRd__lFQO1Eqd__mfp"},{"text":", ","kind":"text"},{"text":"initial","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":" = false, "},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"action","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"kind":"text","text":" () -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:SQ","kind":"typeIdentifier","text":"Equatable"},{"kind":"text","text":"\n"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"value","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value to check against when determining whether"},{"text":" ","type":"text"},{"type":"text","text":"to run the closure."}]}]},{"name":"initial","content":[{"type":"paragraph","inlineContent":[{"text":"Whether the action should be run when this view initially","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"appears."}]}]},{"content":[{"inlineContent":[{"text":"A closure to run when the value changes.","type":"text"}],"type":"paragraph"}],"name":"action"}]},{"kind":"content","content":[{"anchor":"return-value","type":"heading","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"text":"A view that fires an action when the specified value changes.","type":"text"}]}]},{"content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"You can use ","type":"text"},{"code":"onChange","type":"codeVoice"},{"text":" to trigger a side effect as the result of a","type":"text"},{"text":" ","type":"text"},{"text":"value changing, such as an ","type":"text"},{"code":"Environment","type":"codeVoice"},{"type":"text","text":" key or a "},{"type":"codeVoice","code":"Binding"},{"text":".","type":"text"}]},{"inlineContent":[{"text":"The system may call the action closure on the main actor, so avoid","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"long-running tasks in the closure. If you need to perform such tasks,"},{"text":" ","type":"text"},{"type":"text","text":"detach an asynchronous background task."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"When the value changes, the new version of the closure will be called,"},{"type":"text","text":" "},{"text":"so any captured values will have their values from the time that the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"observed value has its new value. In the following code example,"},{"type":"text","text":" "},{"type":"codeVoice","code":"PlayerView"},{"type":"text","text":" calls into its model when "},{"code":"playState","type":"codeVoice"},{"type":"text","text":" changes model."}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["struct PlayerView: View {","    var episode: Episode","    @State private var playState: PlayState = .paused","","    var body: some View {","        VStack {","            Text(episode.title)","            Text(episode.showTitle)","            PlayButton(playState: $playState)","        }","        .onChange(of: playState) {","            model.playStateDidChange(state: playState)","        }","    }","}"]}],"kind":"content"}],"identifier":{"url":"doc:\/\/markdownview.MarkdownView\/documentation\/MarkdownView\/MarkdownView\/onChange(of:initial:_:)-nxcn","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Adds a modifier for this view that fires an action when a specific"},{"type":"text","text":" "},{"text":"value changes.","type":"text"}],"references":{"doc://markdownview.MarkdownView/documentation/MarkdownView/MarkdownView/onChange(of:initial:_:)-nxcn":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"onChange"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"E"},{"text":">(","kind":"text"},{"text":"of","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7SwiftUI4ViewP08MarkdownC0E8onChange2of7initial_Qrqd___SbyyctSQRd__lFQO1Eqd__mfp","text":"E","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"initial"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":", () -> "},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"abstract":[{"type":"text","text":"Adds a modifier for this view that fires an action when a specific"},{"type":"text","text":" "},{"type":"text","text":"value changes."}],"role":"symbol","identifier":"doc:\/\/markdownview.MarkdownView\/documentation\/MarkdownView\/MarkdownView\/onChange(of:initial:_:)-nxcn","deprecated":true,"kind":"symbol","title":"onChange(of:initial:_:)","url":"\/documentation\/markdownview\/markdownview\/onchange(of:initial:_:)-nxcn","type":"topic"},"doc://markdownview.MarkdownView/documentation/MarkdownView/MarkdownView/View-Implementations":{"kind":"article","url":"\/documentation\/markdownview\/markdownview\/view-implementations","abstract":[],"type":"topic","identifier":"doc:\/\/markdownview.MarkdownView\/documentation\/MarkdownView\/MarkdownView\/View-Implementations","title":"View Implementations","role":"collectionGroup"},"doc://markdownview.MarkdownView/documentation/MarkdownView":{"title":"MarkdownView","type":"topic","abstract":[{"type":"text","text":"Display markdown content with SwiftUI."}],"role":"collection","kind":"symbol","identifier":"doc:\/\/markdownview.MarkdownView\/documentation\/MarkdownView","url":"\/documentation\/markdownview"},"doc://markdownview.MarkdownView/documentation/MarkdownView/MarkdownView":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MarkdownView","kind":"identifier"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"MarkdownView"}],"title":"MarkdownView","role":"symbol","identifier":"doc:\/\/markdownview.MarkdownView\/documentation\/MarkdownView\/MarkdownView","url":"\/documentation\/markdownview\/markdownview","abstract":[{"text":"A view that displays read-only Markdown content.","type":"text"}],"kind":"symbol"}}}