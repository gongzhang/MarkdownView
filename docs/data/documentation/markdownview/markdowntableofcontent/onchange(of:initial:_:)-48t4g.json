{"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"Adds a modifier for this view that fires an action when a specific"},{"type":"text","text":" "},{"type":"text","text":"value changes."}],"metadata":{"platforms":[{"deprecated":false,"unavailable":false,"beta":false,"deprecatedAt":"17.0","name":"iOS","introducedAt":"14.0"},{"introducedAt":"11.0","unavailable":false,"deprecated":false,"beta":false,"name":"macOS","deprecatedAt":"14.0"},{"deprecated":false,"name":"tvOS","unavailable":false,"deprecatedAt":"17.0","introducedAt":"14.0","beta":false},{"deprecated":false,"deprecatedAt":"10.0","unavailable":false,"beta":false,"name":"watchOS","introducedAt":"7.0"}],"title":"onChange(of:initial:_:)","modules":[{"relatedModules":["SwiftUICore"],"name":"MarkdownView"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onChange","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"E"},{"kind":"text","text":">("},{"kind":"externalParam","text":"of"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP08MarkdownC0E8onChange2of7initial_Qrqd___SbyyctSQRd__lFQO1Eqd__mfp","kind":"typeIdentifier","text":"E"},{"kind":"text","text":", "},{"text":"initial","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", () -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}],"symbolKind":"method","role":"symbol","roleHeading":"Instance Method","extendedModule":"SwiftUICore","externalID":"s:7SwiftUI4ViewP08MarkdownC0E8onChange2of7initial_Qrqd___SbyyctSQRd__lF::SYNTHESIZED::s:12MarkdownView0A14TableOfContentV"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@"},{"text":"MainActor","kind":"attribute","preciseIdentifier":"s:ScM"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onChange"},{"kind":"text","text":"<"},{"text":"E","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"of"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP08MarkdownC0E8onChange2of7initial_Qrqd___SbyyctSQRd__lFQO1Eqd__mfp","text":"E"},{"text":", ","kind":"text"},{"text":"initial","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":" = false, ","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"action"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"attribute"},{"kind":"text","text":" () -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"E"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SQ","text":"Equatable"},{"kind":"text","text":"\n"}],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"name":"value","content":[{"type":"paragraph","inlineContent":[{"text":"The value to check against when determining whether","type":"text"},{"type":"text","text":" "},{"text":"to run the closure.","type":"text"}]}]},{"name":"initial","content":[{"inlineContent":[{"type":"text","text":"Whether the action should be run when this view initially"},{"text":" ","type":"text"},{"text":"appears.","type":"text"}],"type":"paragraph"}]},{"name":"action","content":[{"type":"paragraph","inlineContent":[{"text":"A closure to run when the value changes.","type":"text"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"A view that fires an action when the specified value changes."}],"type":"paragraph"}]},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"You can use ","type":"text"},{"type":"codeVoice","code":"onChange"},{"type":"text","text":" to trigger a side effect as the result of a"},{"type":"text","text":" "},{"text":"value changing, such as an ","type":"text"},{"code":"Environment","type":"codeVoice"},{"type":"text","text":" key or a "},{"type":"codeVoice","code":"Binding"},{"type":"text","text":"."}]},{"inlineContent":[{"type":"text","text":"The system may call the action closure on the main actor, so avoid"},{"type":"text","text":" "},{"type":"text","text":"long-running tasks in the closure. If you need to perform such tasks,"},{"type":"text","text":" "},{"type":"text","text":"detach an asynchronous background task."}],"type":"paragraph"},{"inlineContent":[{"text":"When the value changes, the new version of the closure will be called,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"so any captured values will have their values from the time that the"},{"type":"text","text":" "},{"type":"text","text":"observed value has its new value. In the following code example,"},{"type":"text","text":" "},{"type":"codeVoice","code":"PlayerView"},{"type":"text","text":" calls into its model when "},{"type":"codeVoice","code":"playState"},{"type":"text","text":" changes model."}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["struct PlayerView: View {","    var episode: Episode","    @State private var playState: PlayState = .paused","","    var body: some View {","        VStack {","            Text(episode.title)","            Text(episode.showTitle)","            PlayButton(playState: $playState)","        }","        .onChange(of: playState) {","            model.playStateDidChange(state: playState)","        }","    }","}"]}],"kind":"content"}],"sections":[],"identifier":{"url":"doc:\/\/markdownview.MarkdownView\/documentation\/MarkdownView\/MarkdownTableOfContent\/onChange(of:initial:_:)-48t4g","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/markdownview\/markdowntableofcontent\/onchange(of:initial:_:)-48t4g"]}],"hierarchy":{"paths":[["doc:\/\/markdownview.MarkdownView\/documentation\/MarkdownView","doc:\/\/markdownview.MarkdownView\/documentation\/MarkdownView\/MarkdownTableOfContent","doc:\/\/markdownview.MarkdownView\/documentation\/MarkdownView\/MarkdownTableOfContent\/View-Implementations"]]},"references":{"doc://markdownview.MarkdownView/documentation/MarkdownView/MarkdownTableOfContent/onChange(of:initial:_:)-48t4g":{"role":"symbol","type":"topic","identifier":"doc:\/\/markdownview.MarkdownView\/documentation\/MarkdownView\/MarkdownTableOfContent\/onChange(of:initial:_:)-48t4g","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onChange"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"E"},{"kind":"text","text":">("},{"text":"of","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7SwiftUI4ViewP08MarkdownC0E8onChange2of7initial_Qrqd___SbyyctSQRd__lFQO1Eqd__mfp","kind":"typeIdentifier","text":"E"},{"kind":"text","text":", "},{"text":"initial","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":", () -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}],"deprecated":true,"url":"\/documentation\/markdownview\/markdowntableofcontent\/onchange(of:initial:_:)-48t4g","title":"onChange(of:initial:_:)","kind":"symbol","abstract":[{"type":"text","text":"Adds a modifier for this view that fires an action when a specific"},{"text":" ","type":"text"},{"text":"value changes.","type":"text"}]},"doc://markdownview.MarkdownView/documentation/MarkdownView/MarkdownTableOfContent/View-Implementations":{"type":"topic","title":"View Implementations","role":"collectionGroup","kind":"article","identifier":"doc:\/\/markdownview.MarkdownView\/documentation\/MarkdownView\/MarkdownTableOfContent\/View-Implementations","url":"\/documentation\/markdownview\/markdowntableofcontent\/view-implementations","abstract":[]},"doc://markdownview.MarkdownView/documentation/MarkdownView":{"title":"MarkdownView","type":"topic","url":"\/documentation\/markdownview","identifier":"doc:\/\/markdownview.MarkdownView\/documentation\/MarkdownView","role":"collection","abstract":[{"text":"Display markdown content with SwiftUI.","type":"text"}],"kind":"symbol"},"doc://markdownview.MarkdownView/documentation/MarkdownView/MarkdownTableOfContent":{"navigatorTitle":[{"text":"MarkdownTableOfContent","kind":"identifier"}],"title":"MarkdownTableOfContent","type":"topic","url":"\/documentation\/markdownview\/markdowntableofcontent","identifier":"doc:\/\/markdownview.MarkdownView\/documentation\/MarkdownView\/MarkdownTableOfContent","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MarkdownTableOfContent"}],"abstract":[{"text":"A customized view that defines its content as a function of a set of headings.","type":"text"}],"kind":"symbol"}}}